[{"/Users/aryanjha/Desktop/ProjectO/Portfolio/src/index.js":"1","/Users/aryanjha/Desktop/ProjectO/Portfolio/src/reportWebVitals.js":"2","/Users/aryanjha/Desktop/ProjectO/Portfolio/src/App.js":"3","/Users/aryanjha/Desktop/ProjectO/Portfolio/src/components/NavBar.js":"4","/Users/aryanjha/Desktop/ProjectO/Portfolio/src/components/Skills.js":"5","/Users/aryanjha/Desktop/ProjectO/Portfolio/src/components/Banner.js":"6","/Users/aryanjha/Desktop/ProjectO/Portfolio/src/components/Footer.js":"7","/Users/aryanjha/Desktop/ProjectO/Portfolio/src/components/Contact.js":"8","/Users/aryanjha/Desktop/ProjectO/Portfolio/src/components/Projects.js":"9","/Users/aryanjha/Desktop/ProjectO/Portfolio/src/components/ProjectCard.js":"10","/Users/aryanjha/Desktop/ProjectO/Portfolio/src/components/MailchimpForm.js":"11","/Users/aryanjha/Desktop/ProjectO/Portfolio/src/components/Newsletter.js":"12"},{"size":535,"mtime":1728654352141,"results":"13","hashOfConfig":"14"},{"size":362,"mtime":1728654352141,"results":"15","hashOfConfig":"14"},{"size":579,"mtime":1728654352128,"results":"16","hashOfConfig":"14"},{"size":2533,"mtime":1741891195285,"results":"17","hashOfConfig":"14"},{"size":2892,"mtime":1741889686226,"results":"18","hashOfConfig":"14"},{"size":3173,"mtime":1741891273654,"results":"19","hashOfConfig":"14"},{"size":1084,"mtime":1741891228489,"results":"20","hashOfConfig":"14"},{"size":3819,"mtime":1741890922739,"results":"21","hashOfConfig":"14"},{"size":4331,"mtime":1743428707865,"results":"22","hashOfConfig":"14"},{"size":359,"mtime":1728666324769,"results":"23","hashOfConfig":"14"},{"size":591,"mtime":1728666426739,"results":"24","hashOfConfig":"14"},{"size":1387,"mtime":1728654352140,"results":"25","hashOfConfig":"14"},{"filePath":"26","messages":"27","suppressedMessages":"28","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"29"},"1wmei19",{"filePath":"30","messages":"31","suppressedMessages":"32","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"29"},{"filePath":"33","messages":"34","suppressedMessages":"35","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"36","usedDeprecatedRules":"29"},{"filePath":"37","messages":"38","suppressedMessages":"39","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"40","usedDeprecatedRules":"29"},{"filePath":"41","messages":"42","suppressedMessages":"43","errorCount":0,"fatalErrorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"44","usedDeprecatedRules":"29"},{"filePath":"45","messages":"46","suppressedMessages":"47","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"48","usedDeprecatedRules":"29"},{"filePath":"49","messages":"50","suppressedMessages":"51","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"52","usedDeprecatedRules":"29"},{"filePath":"53","messages":"54","suppressedMessages":"55","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"56","usedDeprecatedRules":"29"},{"filePath":"57","messages":"58","suppressedMessages":"59","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"60","messages":"61","suppressedMessages":"62","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"63","usedDeprecatedRules":"29"},{"filePath":"64","messages":"65","suppressedMessages":"66","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"29"},{"filePath":"67","messages":"68","suppressedMessages":"69","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"29"},"/Users/aryanjha/Desktop/ProjectO/Portfolio/src/index.js",[],[],[],"/Users/aryanjha/Desktop/ProjectO/Portfolio/src/reportWebVitals.js",[],[],"/Users/aryanjha/Desktop/ProjectO/Portfolio/src/App.js",["70"],[],"import logo from './logo.svg';\nimport './App.css';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport { NavBar } from \"./components/NavBar\";\nimport { Banner } from \"./components/Banner\";\nimport { Skills } from \"./components/Skills\";\nimport { Projects } from \"./components/Projects\";\nimport { Contact } from \"./components/Contact\";\nimport { Footer } from \"./components/Footer\";\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <NavBar />\n      <Banner />\n      <Skills />\n      <Projects />\n      <Contact />\n      <Footer />\n    </div>\n  );\n}\n\nexport default App;\n","/Users/aryanjha/Desktop/ProjectO/Portfolio/src/components/NavBar.js",["71","72"],[],"import { useState, useEffect } from \"react\";\nimport { Navbar, Nav, Container } from \"react-bootstrap\";\nimport logo from '../assets/img/logo.svg';\nimport navIcon1 from '../assets/img/nav-icon1.svg';\nimport navIcon2 from '../assets/img/nav-icon2.svg';\nimport navIcon3 from '../assets/img/nav-icon3.svg';\nimport { HashLink } from 'react-router-hash-link';\nimport {\n  BrowserRouter as Router\n} from \"react-router-dom\";\n\nexport const NavBar = () => {\n\n  const [activeLink, setActiveLink] = useState('home');\n  const [scrolled, setScrolled] = useState(false);\n\n  useEffect(() => {\n    const onScroll = () => {\n      if (window.scrollY > 50) {\n        setScrolled(true);\n      } else {\n        setScrolled(false);\n      }\n    }\n\n    window.addEventListener(\"scroll\", onScroll);\n\n    return () => window.removeEventListener(\"scroll\", onScroll);\n  }, [])\n\n  const onUpdateActiveLink = (value) => {\n    setActiveLink(value);\n  }\n\n  return (\n    <Router>\n      <Navbar expand=\"md\" className={scrolled ? \"scrolled\" : \"\"}>\n        <Container>\n          <Navbar.Brand href=\"/\">\n            {/* <img src={logo} alt=\"Logo\" /> */}\n          </Navbar.Brand>\n          <Navbar.Toggle aria-controls=\"basic-navbar-nav\">\n            <span className=\"navbar-toggler-icon\"></span>\n          </Navbar.Toggle>\n          <Navbar.Collapse id=\"basic-navbar-nav\">\n            <Nav className=\"ms-auto\">\n              <Nav.Link href=\"#home\" className={activeLink === 'home' ? 'active navbar-link' : 'navbar-link'} onClick={() => onUpdateActiveLink('home')}>Home</Nav.Link>\n              <Nav.Link href=\"#skills\" className={activeLink === 'skills' ? 'active navbar-link' : 'navbar-link'} onClick={() => onUpdateActiveLink('skills')}>Skills</Nav.Link>\n              <Nav.Link href=\"#projects\" className={activeLink === 'projects' ? 'active navbar-link' : 'navbar-link'} onClick={() => onUpdateActiveLink('projects')}>Projects</Nav.Link>\n            </Nav>\n            <span className=\"navbar-text\">\n              <div className=\"social-icon\">\n                <a href=\"https://www.linkedin.com/in/jhaaryan597/\"><img src={navIcon1} alt=\"\" /></a>\n                <a href=\"https://github.com/jhaaryan597\"><img src={navIcon2} alt=\"\" /></a>\n                <a href=\"#\"><img src={navIcon3} alt=\"\" /></a>\n              </div>\n              <HashLink to='#connect'>\n                <button className=\"vvd\"><span>Letâ€™s Connect</span></button>\n              </HashLink>\n            </span>\n          </Navbar.Collapse>\n        </Container>\n      </Navbar>\n    </Router>\n  )\n}\n","/Users/aryanjha/Desktop/ProjectO/Portfolio/src/components/Skills.js",["73","74","75","76","77","78","79","80"],[],"import meter1 from \"../assets/img/meter1.svg\";\nimport meter2 from \"../assets/img/meter2.svg\";\nimport meter3 from \"../assets/img/meter3.svg\";\nimport Carousel from 'react-multi-carousel';\nimport 'react-multi-carousel/lib/styles.css';\nimport arrow1 from \"../assets/img/arrow1.svg\";\nimport arrow2 from \"../assets/img/arrow2.svg\";\nimport colorSharp from \"../assets/img/color-sharp.png\"\n\nexport const Skills = () => {\n  const responsive = {\n    superLargeDesktop: {\n      // the naming can be any, depends on you.\n      breakpoint: { max: 4000, min: 3000 },\n      items: 5\n    },\n    desktop: {\n      breakpoint: { max: 3000, min: 1024 },\n      items: 3\n    },\n    tablet: {\n      breakpoint: { max: 1024, min: 464 },\n      items: 2\n    },\n    mobile: {\n      breakpoint: { max: 464, min: 0 },\n      items: 1\n    }\n  };\n\n  return (\n    <section className=\"skill\" id=\"skills\">\n        <div className=\"container\">\n            <div className=\"row\">\n                <div className=\"col-12\">\n                    <div className=\"skill-bx wow zoomIn\">\n                        <h2>Skills</h2>\n                        <p>I specialize in Full Stack Development with expertise in Flutter and FlutterFlow for building cross-platform mobile and web applications. My backend skills include Node.js, Express.js, and REST APIs, while I manage databases efficiently using SQL and Firebase. Additionally, I am passionate about open-source contributions and hackathons, constantly exploring new technologies to enhance my development workflow.</p>\n                        <Carousel responsive={responsive} infinite={true} className=\"owl-carousel owl-theme skill-slider\">\n                            <div className=\"item\">\n                                <img src={meter1} alt=\"Image\" />\n                                <h5>Flutter Development</h5>\n                            </div>\n                            <div className=\"item\">\n                                <img src={meter2} alt=\"Image\" />\n                                <h5>iOS Development</h5>\n                            </div>\n                            <div className=\"item\">\n                                <img src={meter3} alt=\"Image\" />\n                                <h5>Backend Development</h5>\n                            </div>\n                            <div className=\"item\">\n                                <img src={meter2} alt=\"Image\" />\n                                <h5>DSA</h5>\n                            </div>\n                            <div className=\"item\">\n                                <img src={meter1} alt=\"Image\" />\n                                <h5>UI/UX</h5>\n                            </div>\n                        </Carousel>\n                    </div>\n                </div>\n            </div>\n        </div>\n        <img className=\"background-image-left\" src={colorSharp} alt=\"Image\" />\n    </section>\n  )\n}\n","/Users/aryanjha/Desktop/ProjectO/Portfolio/src/components/Banner.js",["81","82"],[],"import { useState, useEffect } from \"react\";\nimport { Container, Row, Col } from \"react-bootstrap\";\nimport headerImg from \"../assets/img/header-img.svg\";\nimport { ArrowRightCircle } from 'react-bootstrap-icons';\nimport 'animate.css';\nimport TrackVisibility from 'react-on-screen';\n\nexport const Banner = () => {\n  const [loopNum, setLoopNum] = useState(0);\n  const [isDeleting, setIsDeleting] = useState(false);\n  const [text, setText] = useState('');\n  const [delta, setDelta] = useState(300 - Math.random() * 100);\n  const [index, setIndex] = useState(1);\n  const toRotate = [ \"Flutter Developer\", \"iOS Developer\", \"Backend Developer\" ];\n  const period = 2000;\n\n  useEffect(() => {\n    let ticker = setInterval(() => {\n      tick();\n    }, delta);\n\n    return () => { clearInterval(ticker) };\n  }, [text])\n\n  const tick = () => {\n    let i = loopNum % toRotate.length;\n    let fullText = toRotate[i];\n    let updatedText = isDeleting ? fullText.substring(0, text.length - 1) : fullText.substring(0, text.length + 1);\n\n    setText(updatedText);\n\n    if (isDeleting) {\n      setDelta(prevDelta => prevDelta / 2);\n    }\n\n    if (!isDeleting && updatedText === fullText) {\n      setIsDeleting(true);\n      setIndex(prevIndex => prevIndex - 1);\n      setDelta(period);\n    } else if (isDeleting && updatedText === '') {\n      setIsDeleting(false);\n      setLoopNum(loopNum + 1);\n      setIndex(1);\n      setDelta(500);\n    } else {\n      setIndex(prevIndex => prevIndex + 1);\n    }\n  }\n\n  return (\n    <section className=\"banner\" id=\"home\">\n      <Container>\n        <Row className=\"aligh-items-center\">\n          <Col xs={12} md={6} xl={7}>\n            <TrackVisibility>\n              {({ isVisible }) =>\n              <div className={isVisible ? \"animate__animated animate__fadeIn\" : \"\"}>\n                <span className=\"tagline\">Welcome to my Portfolio</span>\n                <h1>{`Hi! I'm Aryan Jha ðŸ‘‹`} <br /><span className=\"txt-rotate\" dataPeriod=\"1000\" data-rotate='[ \"Flutter Developer\", \"iOS Developer\", \"Backend Developer\" ]'><span className=\"wrap\">{text}</span></span></h1>\n                  <p>A Full Stack Flutter Developer and Pre-Final Year CSE Student at IIIT Manipur (AI & DS). I specialize in building scalable mobile & web applications with Flutter, Node.js, Express.js, SQL, and Firebase.\n<br />\nðŸ’¡ What I Do\n<br />\nðŸ”¹ Mobile & Web App Development â€“ Flutter, FlutterFlow\n<br />\nðŸ”¹ Backend Development â€“ Node.js, Express.js, REST APIs\n<br />\nðŸ”¹ Database Management â€“ SQL, Firebase\n<br />\nðŸ”¹ Open Source & Hackathons â€“ Passionate about innovation</p>\n                  <button onClick={() => console.log('connect')}>Contact me at: aryanjha597@gmail.com<ArrowRightCircle size={25} /></button>\n              </div>}\n            </TrackVisibility>\n          </Col>\n          <Col xs={12} md={6} xl={5}>\n            <TrackVisibility>\n              {({ isVisible }) =>\n                <div className={isVisible ? \"animate__animated animate__zoomIn\" : \"\"}>\n                  <img src={headerImg} alt=\"Header Img\"/>\n                </div>}\n            </TrackVisibility>\n          </Col>\n        </Row>\n      </Container>\n    </section>\n  )\n}\n","/Users/aryanjha/Desktop/ProjectO/Portfolio/src/components/Footer.js",["83","84"],[],"import { Container, Row, Col } from \"react-bootstrap\";\nimport { MailchimpForm } from \"./MailchimpForm\";\nimport logo from \"../assets/img/logo.svg\";\nimport navIcon1 from \"../assets/img/nav-icon1.svg\";\nimport navIcon2 from \"../assets/img/nav-icon2.svg\";\nimport navIcon3 from \"../assets/img/nav-icon3.svg\";\n\nexport const Footer = () => {\n  return (\n    <footer className=\"footer\">\n      <Container>\n        <Row className=\"align-items-center\">\n          <MailchimpForm />\n          <Col size={12} sm={6}>\n            {/* <img src={logo} alt=\"Logo\" /> */}\n          </Col>\n          <Col size={12} sm={6} className=\"text-center text-sm-end\">\n            <div className=\"social-icon\">\n              <a href=\"https://www.linkedin.com/in/jhaaryan597/\"><img src={navIcon1} alt=\"Icon\" /></a>\n              <a href=\"https://github.com/jhaaryan597\"><img src={navIcon2} alt=\"Icon\" /></a>\n              <a href=\"#\"><img src={navIcon3} alt=\"Icon\" /></a>\n            </div>\n            <p>Copyright 2025. All Rights Reserved</p>\n          </Col>\n        </Row>\n      </Container>\n    </footer>\n  )\n}\n","/Users/aryanjha/Desktop/ProjectO/Portfolio/src/components/Contact.js",["85"],[],"import { useState } from \"react\";\nimport { Container, Row, Col } from \"react-bootstrap\";\nimport contactImg from \"../assets/img/contact-img.svg\";\nimport 'animate.css';\nimport TrackVisibility from 'react-on-screen';\n\nexport const Contact = () => {\n  const formInitialDetails = {\n    firstName: '',\n    lastName: '',\n    email: '',\n    phone: '',\n    message: ''\n  }\n  const [formDetails, setFormDetails] = useState(formInitialDetails);\n  const [buttonText, setButtonText] = useState('Send');\n  const [status, setStatus] = useState({});\n\n  const onFormUpdate = (category, value) => {\n      setFormDetails({\n        ...formDetails,\n        [category]: value\n      })\n  }\n\n  const handleSubmit = async (e) => {\n    e.preventDefault();\n    setButtonText(\"Sending...\");\n    let response = await fetch(\"http://localhost:5000/contact\", {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json;charset=utf-8\",\n      },\n      body: JSON.stringify({\n        ...formDetails,\n        recipientEmail: \"aryanjha597@gmail.com\" // Add recipient email here\n      }),\n    });\n    setButtonText(\"Send\");\n    let result = await response.json();\n    setFormDetails(formInitialDetails);\n    if (result.code == 200) {\n      setStatus({ success: true, message: 'Message sent successfully' });\n    } else {\n      setStatus({ success: false, message: 'Something went wrong, please try again later.' });\n    }\n  };\n\n  return (\n    <section className=\"contact\" id=\"connect\">\n      <Container>\n        <Row className=\"align-items-center\">\n          <Col size={12} md={6}>\n            <TrackVisibility>\n              {({ isVisible }) =>\n                <img className={isVisible ? \"animate__animated animate__zoomIn\" : \"\"} src={contactImg} alt=\"Contact Us\"/>\n              }\n            </TrackVisibility>\n          </Col>\n          <Col size={12} md={6}>\n            <TrackVisibility>\n              {({ isVisible }) =>\n                <div className={isVisible ? \"animate__animated animate__fadeIn\" : \"\"}>\n                <h2>Get In Touch</h2>\n                <form onSubmit={handleSubmit}>\n                  <Row>\n                    <Col size={12} sm={6} className=\"px-1\">\n                      <input type=\"text\" value={formDetails.firstName} placeholder=\"First Name\" onChange={(e) => onFormUpdate('firstName', e.target.value)} />\n                    </Col>\n                    <Col size={12} sm={6} className=\"px-1\">\n                      <input type=\"text\" value={formDetails.lasttName} placeholder=\"Last Name\" onChange={(e) => onFormUpdate('lastName', e.target.value)}/>\n                    </Col>\n                    <Col size={12} sm={6} className=\"px-1\">\n                      <input type=\"email\" value={formDetails.email} placeholder=\"Email Address\" onChange={(e) => onFormUpdate('email', e.target.value)} />\n                    </Col>\n                    <Col size={12} sm={6} className=\"px-1\">\n                      <input type=\"tel\" value={formDetails.phone} placeholder=\"Phone No.\" onChange={(e) => onFormUpdate('phone', e.target.value)}/>\n                    </Col>\n                    <Col size={12} className=\"px-1\">\n                      <textarea rows=\"6\" value={formDetails.message} placeholder=\"Message\" onChange={(e) => onFormUpdate('message', e.target.value)}></textarea>\n                      <button type=\"submit\"><span>{buttonText}</span></button>\n                    </Col>\n                    {\n                      status.message &&\n                      <Col>\n                        <p className={status.success === false ? \"danger\" : \"success\"}>{status.message}</p>\n                      </Col>\n                    }\n                  </Row>\n                </form>\n              </div>}\n            </TrackVisibility>\n          </Col>\n        </Row>\n      </Container>\n    </section>\n  )\n}\n","/Users/aryanjha/Desktop/ProjectO/Portfolio/src/components/Projects.js",["86","87","88","89"],[],"/Users/aryanjha/Desktop/ProjectO/Portfolio/src/components/ProjectCard.js",["90"],[],"import { Col } from \"react-bootstrap\";\n\nexport const ProjectCard = ({ title, description, imgUrl }) => {\n  return (\n    <Col size={6} sm={12} md={6}>\n      <div className=\"proj-imgbx\">\n        <img src={imgUrl} />\n        <div className=\"proj-txtx\">\n          <h4>{title}</h4>\n          <span>{description}</span>\n        </div>\n      </div>\n    </Col>\n  )\n}\n","/Users/aryanjha/Desktop/ProjectO/Portfolio/src/components/MailchimpForm.js",[],[],"/Users/aryanjha/Desktop/ProjectO/Portfolio/src/components/Newsletter.js",[],[],{"ruleId":"91","severity":1,"message":"92","line":1,"column":8,"nodeType":"93","messageId":"94","endLine":1,"endColumn":12},{"ruleId":"91","severity":1,"message":"92","line":3,"column":8,"nodeType":"93","messageId":"94","endLine":3,"endColumn":12},{"ruleId":"95","severity":1,"message":"96","line":55,"column":17,"nodeType":"97","endLine":55,"endColumn":29},{"ruleId":"91","severity":1,"message":"98","line":6,"column":8,"nodeType":"93","messageId":"94","endLine":6,"endColumn":14},{"ruleId":"91","severity":1,"message":"99","line":7,"column":8,"nodeType":"93","messageId":"94","endLine":7,"endColumn":14},{"ruleId":"100","severity":1,"message":"101","line":41,"column":33,"nodeType":"97","endLine":41,"endColumn":65},{"ruleId":"100","severity":1,"message":"101","line":45,"column":33,"nodeType":"97","endLine":45,"endColumn":65},{"ruleId":"100","severity":1,"message":"101","line":49,"column":33,"nodeType":"97","endLine":49,"endColumn":65},{"ruleId":"100","severity":1,"message":"101","line":53,"column":33,"nodeType":"97","endLine":53,"endColumn":65},{"ruleId":"100","severity":1,"message":"101","line":57,"column":33,"nodeType":"97","endLine":57,"endColumn":65},{"ruleId":"100","severity":1,"message":"101","line":65,"column":9,"nodeType":"97","endLine":65,"endColumn":79},{"ruleId":"91","severity":1,"message":"102","line":13,"column":10,"nodeType":"93","messageId":"94","endLine":13,"endColumn":15},{"ruleId":"103","severity":1,"message":"104","line":23,"column":6,"nodeType":"105","endLine":23,"endColumn":12,"suggestions":"106"},{"ruleId":"91","severity":1,"message":"92","line":3,"column":8,"nodeType":"93","messageId":"94","endLine":3,"endColumn":12},{"ruleId":"95","severity":1,"message":"96","line":21,"column":15,"nodeType":"97","endLine":21,"endColumn":27},{"ruleId":"107","severity":1,"message":"108","line":42,"column":21,"nodeType":"109","messageId":"110","endLine":42,"endColumn":23},{"ruleId":"91","severity":1,"message":"111","line":3,"column":8,"nodeType":"93","messageId":"94","endLine":3,"endColumn":16},{"ruleId":"91","severity":1,"message":"112","line":4,"column":8,"nodeType":"93","messageId":"94","endLine":4,"endColumn":16},{"ruleId":"91","severity":1,"message":"113","line":5,"column":8,"nodeType":"93","messageId":"94","endLine":5,"endColumn":16},{"ruleId":"114","severity":1,"message":"115","line":105,"column":7,"nodeType":"97","endLine":105,"endColumn":65},{"ruleId":"114","severity":1,"message":"115","line":7,"column":9,"nodeType":"97","endLine":7,"endColumn":29},"no-unused-vars","'logo' is defined but never used.","Identifier","unusedVar","jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/jsx-eslint/eslint-plugin-jsx-a11y/blob/HEAD/docs/rules/anchor-is-valid.md","JSXOpeningElement","'arrow1' is defined but never used.","'arrow2' is defined but never used.","jsx-a11y/img-redundant-alt","Redundant alt attribute. Screen-readers already announce `img` tags as an image. You donâ€™t need to use the words `image`, `photo,` or `picture` (or any specified custom words) in the alt prop.","'index' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'delta' and 'tick'. Either include them or remove the dependency array.","ArrayExpression",["116"],"eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","'projImg1' is defined but never used.","'projImg2' is defined but never used.","'projImg3' is defined but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.",{"desc":"117","fix":"118"},"Update the dependencies array to be: [delta, text, tick]",{"range":"119","text":"120"},[800,806],"[delta, text, tick]"]